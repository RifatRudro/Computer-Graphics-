#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, include glu.h and gl.h
#include<math.h>
#include <iostream>
# define PI           3.14159265358979323846
/* Handler for window-repaint event. Call back when the window first appears and
whenever the window needs to be re-painted. */
using namespace std;

GLfloat x;
GLfloat y;

void display() {

    glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Set background color to black and opaque
    glClear(GL_COLOR_BUFFER_BIT);         // Clear the color buffer (background)

    //gluOrtho2D(-2, 2,-2, 2); //(left, right, top, bottom)
    glScalef(x,y,1);
    //glTranslatef(-0.5,0.5,0);
    glBegin(GL_QUADS);
        glVertex2f(.3,.3);
        glVertex2f(-.3,.3);
        glVertex2f(-.3,-.3);
        glVertex2f(.3,-.3);
    glEnd();

    glFlush();  // Render now
}

void initValues(){
    cout<<"Enter Transformation Values: \n";
    cout<<"=============================\n";
    cout<<"Enter x: ";
    cin >> x;
    cout<<"Enter y: ";
    cin >> y;
}

int main(int argc, char** argv) {
  glutInit(&argc, argv);            // Initialize GLUT

  //Initialized transformation values
  initValues();

  glutCreateWindow("OpenGL Setup Test"); // Create a window with the given title
  glutInitWindowSize(320, 320);   // Set the window's initial width & height
  glutDisplayFunc(display); // Register display callback handler for window re-paint
  glutMainLoop();           // Enter the event-processing loop
  return 0;
}
